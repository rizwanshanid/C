07.04 9:11 PM
12
Aim-12
Implement queue using linkedlist.
Algorithm
1. Start
2. Declare structure node with data elements data and next.
3. Do
 Print menu
1. Insert 2. Delete 3. Display 4. Exit
4. Read choice
5. If choice=1 then call insert()
6. If choice=2 then call delete()
7. If choice=3 then call display()
8. If choice=4 then Exit.
9. Until choice!=5 then
[end of loop]
10. Stop
Procedure:-
insert()
1. Allocate memory for new node.
2. Set newnode->data=item
3. newnode->next=null.
4. If front=null then
 Set front=newnode
 Else
 Set rear->next=newnode
 rear=newnode
[end of if structure]
delete()
1. Set temp=front.
2. If temp=null then print ‘Empty queue’
 Else
 Set item=temp->data.
 front=temp->next
 free(temp)
3. Print deleted element,item
[end of if structure]
display()
1. Set temp=front
2. If temp=null then print ‘Queue empty’.
 Else
 Print temp->data, until temp!=null.
 temp=temp->next.
[end of loop]
[end of if structure]
Source code
#include<stdio.h>
#include<stdlib.h>
struct Node
{
 int data;
 struct Node *next;
}*front = NULL,*rear = NULL;
void insert(int);
void delete();
void display();
void main()
{
 int choice, value;
 printf("\n:: Queue Implementation using Linked List ::\n");
 while(1){
printf("\n****** MENU ******\n");
printf("1. Insert\n2. Delete\n3. Display\n4. Exit\n");
printf("Enter your choice: ");
scanf("%d",&choice);
switch(choice){
 case 1: printf("Enter the value to be insert: ");
 scanf("%d", &value);
 insert(value);
 break;
 case 2: delete(); break;
 case 3: display(); break;
 case 4: exit(0);
 default: printf("\nWrong selection!!! Please try again!!!\n");
}
 }
}
void insert(int value)
{
 struct Node *newNode;
 newNode = (struct Node*)malloc(sizeof(struct Node));
 newNode->data = value;
 newNode -> next = NULL;
 if(front == NULL)
front = rear = newNode;
 else{
rear -> next = newNode;
rear = newNode;
 }
 printf("\nInsertion is Success!!!\n");
}
void delete()
{
 if(front == NULL)
printf("\nQueue is Empty!!!\n");
 else{
struct Node *temp = front;
front = front -> next;
printf("\nDeleted element: %d\n", temp->data);
free(temp);
 }
}
void display()
{
 if(front == NULL)
printf("\nQueue is Empty!!!\n");
 else{
struct Node *temp = front;
while(temp->next != NULL){
 printf("%d--->",temp->data);
 temp = temp -> next;
}
printf("%d--->NULL\n",temp->data);
 }
}
Output
:: Queue Implementation using Linked List ::
****** MENU ******
1. Insert
2. Delete
3. Display
4. Exit
Enter your choice: 2
Queue is Empty!!!
****** MENU ******
1. Insert
2. Delete
3. Display
4. Exit
Enter your choice: 1
Enter the value to be insert: 23
Insertion is Success!!!
****** MENU ******
1. Insert
2. Delete
3. Display
4. Exit
Enter your choice: 3
23--->NULL

