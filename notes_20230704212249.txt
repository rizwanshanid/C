07.04 9:07 PM
9
Aim-9
Implement stack using array.
Algorithm
1. Start
2. Globaly declare array stack choice,n,top,x,i
3. Set top = -1
4. Read size of stack as n
5. Read choice.
6. If choice=1 call push()
7. If choice=2 call pop()
8. If choice=3 call display()
9. If choice=4 then Exit.
Procedure:-
push()
1. Start
2. If top is greater than or equal to n-1 goto step 3 else 4
3. Return STACK is overflow
4. Read value to be pushed as x
5. Increment top by 1
6. Assign value x to stack of id top
[End of loop]
7. Stop
pop()
1. Start
2. If top less than or equals to -1 goto step 3 else step 4
3. Stack is underflow
4. Return The popped element is %d, of stack[top]
5. Decrement top by one
[End of loop]
6. Stop
display()
1. Start
2. If top is greater than or equals zero go step 3 else
3. Print the elements in stack
4. Repeat steps 5 and 6 till i from top reaches zero
5. Print value of stack[i]
6. Print Request for next choice;
[End of loop]
7. Stop
Source code
#include<stdio.h>
int stack[100],choice,n,top,x,i;
void push(void);
void pop(void);
void display(void);
void main()
{
top=-1;
printf("\n Enter the size of STACK:");
scanf("%d",&n);
printf("\n\t STACK OPERATIONS USING ARRAY");
printf("\n\t--------------------------------");
printf("\n\t 1.PUSH\n\t 2.POP\n\t 3.DISPLAY\n\t 4.EXIT");
do
{
printf("\n Enter the Choice:");
scanf("%d",&choice);
switch(choice)
{
case 1:
{
push();
break;
}
case 2:
{
pop();
break;
}
case 3:
{
display();
break;
}
case 4:
{
printf("\n\t EXIT POINT ");
break;
}
default:
{
printf ("\n\t Please Enter a Valid Choice(1/2/3/4)");
}
}
}
while(choice!=4);
}
void push()
{
if(top>=n-1)
{
printf("\n\tSTACK is over flow");
}
else
{
printf(" Enter a value to be pushed:");
scanf("%d",&x);
top++;
stack[top]=x;
}
}
void pop()
{
if(top<=-1)
{
printf("\n\t Stack is under flow");
}
else
{
printf("\n\t The popped elements is %d",stack[top]);
top--;
}
}
void display()
{
if(top>=0)
{
printf("\n The elements in STACK \n");
for(i=top; i>=0; i--)
printf("\n%d",stack[i]);
printf("\n Press Next Choice");
}
else
{
printf("\n The STACK is empty");
}
}
Output
Enter the size of stack: 3
STACK OPERATIONS USING ARRAY
-------------------------------------------------------
1. PUSH
2. POP
3. DISPLAY
4. EXIT
Enter the choice: 2
Stack is underflow.
Enter the choice: 1
Enter a value to be pushed: 65
Enter the choice: 1
Enter a value to be pushed: 43
Enter the choice: 3
The elements in STACK
43
65
Press next choice
Enter the choice: 4
Exit point

